#version 130

in vec4 vVertex;
in vec3 vNormal;

smooth out float textureCoordinate;

uniform vec3 vLightPosition;

uniform mat4 mvpMatrix;
uniform mat4 mvMatrix;
uniform mat3 normalMatrix;

void main(void)
{
	// get surface normal in eye coordinate
	vec3 vEyeNormal = normalMatrix * vNormal;

	// get vertex position in eye coordinates
	vec4 vPosition4 = mvMatrix * vVertex;
	vec3 vPosition3 = vPosition4.xyz / vPosition4.w;

	// get vector to light source
	vec3 vLightDir = normalize(vLightPosition - vPosition3);

	// dot product gives us diffuse intensity
	textureCoordinate = max(0.0, dot(vEyeNormal, vLightDir));

	// don't forget to transform to the geometry
	gl_Position = mvpMatrix * vVertex;
}